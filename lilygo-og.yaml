esphome:
  name: "lilygo-og"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api: 
  password: "3cmdcph4me"
  #services:
  #  - service: set_forecast_og
  #    variables:
  #      wetter_art: String
  #     wetter_temp: float
  #     wetter_time: String
  #    then:

ota:
  password: "3cmdcph4me"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.178.218
    gateway: 192.168.178.1
    subnet: 255.255.255.0  


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lilygo OG Fallback Hotspot"
    password: !secret wifi_password 

external_components:
  - source: github://ashald/esphome@lilygo-t5-47
    #   type: git
    #url: https://github.com/vbaksa/esphome
    #      ref: dev
    components:
#      - lilygo_t5_47_battery
#      - lilygo_t5_47_display  540*960
       - lilygo_t5_47 

globals:
  - id : wxpos
    type: int
    initial_value: "10"
  - id : wypos
    type: int
    initial_value: "410"
  - id: wetter_type_arr
    type: std::vector<std::string> 
    initial_value: '{"\U000F0590","\U000F0591","\U000F0597","\U000F0599","\U000F0598","\U000F0599","\U000F0598","\U000F0590"}'      
  - id: wetter_time_arr
    type: std::vector<std::string> 
    initial_value: '{"Mo 7","Mo 10","DI 6","Mi 12","Do 3","Fr 6","MI 18","Sa 12","So 15"}'
  #- id: wetter_temp_arr  
  #  type: int[7]
  # initial_value: '{12,14,15,16,17,18,19,20}'
  - id: lo_index
    type: int
    initial_value: "0"

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: "t5 Button 1"
  - platform: gpio
    pin:
      number: GPIO34
      inverted: true
    name: "t5 Button 2"
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: "t5 Button 3"

sensor:
  - platform: homeassistant
    entity_id: sensor.aussen_temperatur
    id: ext_temp
    internal: true   
  - platform: homeassistant
    entity_id: sensor.aussen_luftfeuchte
    id: ext_humi
    internal: true  
  - platform: homeassistant
    entity_id: sensor.aussen_luftdruck
    id: ext_luftdruck
    internal: true 
  # wetter vorschau helfer
  - platform: homeassistant
    entity_id: sensor.wetter_art
    id: wetterart
    internal: true
  - platform: homeassistant
    entity_id: sensor.wetter_temp
    id: wettertemp
    internal: true
  - platform: homeassistant
    entity_id: sensor.wetter_druck
    id: wetterdruck
    internal: true
  - platform: homeassistant  
    entity_id: sensor.wetter_zeit
    id: wetterdate
    internal: true
  #og sz  
  - platform: homeassistant
    entity_id: sensor.eh_ogsz_temperatur
    id: ogsz_temp
    internal: true
  - platform: homeassistant
    entity_id: sensor.eh_ogsz_feuchte
    id: ogsz_humi
    internal: true
  #og wz  
  - platform: homeassistant
    entity_id: sensor.eh_ogwz_temperatur
    id: ogwz_temp
    internal: true 
  - platform: homeassistant
    entity_id: sensor.eh_ogwz_feuchte
    id: ogwz_humi
    internal: true     
  #og kueche  
  - platform: homeassistant
    entity_id: sensor.og_kuche_temperatur
    id: ogki_temp
    internal: true
  - platform: homeassistant
    entity_id: sensor.og_kuche_feuchte
    id: ogki_humi
    internal: true  

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 40   
  - file: "gfonts://Unbounded"
    id: small
    size: 20    

  - file: "fonts/materialdesignicons-webfont.ttf" 
    id: wettersymbol
    size: 60  
    glyphs:
      - "\U000F0590" # cloudy
    
  - file: "fonts/materialdesignicons-webfont.ttf" 
    id: wettericon
    size: 40  
    glyphs:
      - "\U000F0590" # cloudy
      - "\U000F0F2F" # cloudy-alert
      - "\U000F0E6E" # cloudy-arrow-right
      - "\U000F0595" # cloudy-partly
      - "\U000F0F31" # cloudy-night-partly
      - "\U000F0591" # fog
      - "\U000F0592" # hail
      - "\U000F0F30" # hazy
      - "\U000F0898" # hurricane
      - "\U000F0593" # lightning
      - "\U000F067E" # lightning-rainy
      - "\U000F0594" # clear-night
      - "\U000F0F32" # partly-lightning
      - "\U000F0F33" # partly-rainy
      - "\U000F0F34" # partly-snowy
      - "\U000F0F35" # partly-snowy-rainy
      - "\U000F0596" # pouring
      - "\U000F0597" # rainy
      - "\U000F0598" # snowy
      - "\U000F0F36" # snowy-heavy
      - "\U000F067F" # snowy-rainy
      - "\U000F0599" # sunny
      - "\U000F0F37" # sunny-alert
      - "\U000F14E4" # sunny-off
      - "\U000F059A" # sunset
      - "\U000F059B" # sunset-down
      - "\U000F059C" # sunset-up
      - "\U000F0F38" # tornado
      - "\U000F059D" # windy
      - "\U000F059E" # windy-variant
      - "\U000F10C2" # Temperature High
      - "\U000F10C3" # Temperature Low
      - "\U000F07E4" # CO2
      - "\U000F058C" # water
      - "\U000F17C5" # ph
      - "\U000F156D" # sofa
      - "\U000F1A74" # solar
      - "\U000F04DE" # stove
      - "\U000F058E" # water percent
      - "\U000F0099" # bed
      - "\U000F001B" # air cond
      - "\U000F0210" # fan
      - "\U000F0238" # fire
      - "\U000F029A" # gauge
      - "\U000F0F9B" # home ->
      - "\U000F028F" # fridge
      - "\U000F07F4" # TV
      - "\U000F04B2" # sleep
      - "\U000F0E69" # tree

      
display:
  - platform: lilygo_t5_47
    update_interval: 60s
    lambda: |-
      //Kueche
      it.printf(50,10,id(wettericon),"\U000F028F\U000F04DE");
      //it.image(50,255, id(hail),COLOR_OFF,COLOR_ON);
      it.printf(5, 67, id(wettericon), "\U000F10C2"); //termometer
      it.printf(50,65,id(roboto),"%2.1f",id(ogki_temp).state);
      
      it.printf(5,117, id(wettericon), "\U000F058C"); //drop
      it.printf(50,115,id(roboto),"%2.1f",id(ogki_humi).state);
      //wohn
      //it.print(250,20,id(roboto),"Wohn");
      it.printf(250, 10, id(wettericon), "\U000F156D\U000F07F4" ); 
      //it.printf(200, 202, id(wettericon), "\U000F029A"); //gauge
      it.printf(200, 165, id(wettericon), "\U000F0210"); //fan
      
      it.printf(250,65,id(roboto),"%2.1f",id(ogwz_temp).state);
      it.printf(250,115,id(roboto),"%2.1f",id(ogwz_humi).state);

      //schlaf
      //it.print(450,20,id(roboto),"Schlaf");
      it.printf(450,10, id(wettericon), "\U000F0099\U000F04B2");
      it.printf(450,65,id(roboto),"%2.1f",id(ogsz_temp).state);
      it.printf(450,115,id(roboto),"%2.1f",id(ogsz_humi).state);

      //extern
      //it.print(650,20,id(roboto),"Extern");
      it.printf(650,10, id(wettericon), "\U000F0F9B\U000F0E69");
      it.printf(650,65,id(roboto),"%2.1f", id(ext_temp).state);
      it.printf(650,115,id(roboto),"%2.1f", id(ext_humi).state);

      //wetter -how to loop here ? 
      it.printf(50,420,id(wettericon),id(wetter_type_arr)[0].c_str());
      it.printf(50,390,id(small),id(wetter_time_arr)[0].c_str());

      it.printf(150,420,id(wettericon),id(wetter_type_arr)[1].c_str());
      //it.printf(150,390,id(small),id(wetter_time_arr)[1].c_str());

      it.printf(250,420,id(wettericon),id(wetter_type_arr)[2].c_str());
      //it.printf(250,390,id(small),id(wetter_time_arr)[2].c_str());

      it.printf(350,420,id(wettericon),id(wetter_type_arr)[3].c_str());
      //it.printf(350,390,id(small),id(wetter_time_arr)[3].c_str());

      
      
#captive_portal:
    
